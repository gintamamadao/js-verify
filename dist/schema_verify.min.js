"use strict";function isObject(e){return null!=e&&"object"==typeof e&&!1===Array.isArray(e)}function isNull(e){return null===e}function isUndefined(e){return void 0===e}function createCommonjsModule(e,r){return r={exports:{}},e(r,r.exports),r.exports}Object.defineProperty(exports,"__esModule",{value:!0});for(var toString={}.toString,isarray=Array.isArray||function(e){return"[object Array]"==toString.call(e)},isNumber=function(e){return"number"==typeof e?e-e==0:"string"==typeof e&&""!==e.trim()&&(Number.isFinite?Number.isFinite(+e):isFinite(+e))},numberIsNan=Number.isNaN||function(e){return e!==e},_isFinite=Number.isFinite||function(e){return!("number"!=typeof e||numberIsNan(e)||e===1/0||e===-1/0)},isInteger=Number.isInteger||function(e){return"number"==typeof e&&_isFinite(e)&&Math.floor(e)===e},getArgs=function(e){var r=e.length>>>0,t=[],n=r-1;if(n<1)return t;t.length=n;for(var i=1;i<r;i+=1)t[i-1]=e[i];return t},attemptX=function(e){try{return{threw:!1,value:e.apply(this,getArgs(arguments))}}catch(e){return{threw:!0,value:e}}},toBooleanX=function(e){return!!e},isFalseyX=function(e){return!1===toBooleanX(e)},lodash_isnull=isNull,lib=isUndefined,toStr={}.toString,toStringTagX=function(e){return lodash_isnull(e)?"[object Null]":lib(e)?"[object Undefined]":toStr.call(e)},hasSymbolSupportX="function"==typeof Symbol&&"symbol"==typeof Symbol(""),hasToStringTagX=hasSymbolSupportX&&"symbol"==typeof Symbol.toStringTag,isPrimitive=function(e){return null==e||"function"!=typeof e&&"object"!=typeof e},isNilX=function(e){return lodash_isnull(e)||lib(e)},requireObjectCoercibleX=function(e){if(isNilX(e))throw new TypeError("Cannot call method on "+e);return e},cachedConstructorsX={Array:[].constructor,Boolean:(!0).constructor,Function:function(){}.constructor,Number:(0).constructor,Object:{}.constructor,RegExp:/(?:)/.constructor,String:"".constructor},commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},shams=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},r=Symbol("test"),t=Object(r);if("string"==typeof r)return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;e[r]=42;for(r in e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==r)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,r))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var i=Object.getOwnPropertyDescriptor(e,r);if(42!==i.value||!0!==i.enumerable)return!1}return!0},origSymbol=commonjsGlobal.Symbol,hasSymbols=function(){return"function"==typeof origSymbol&&("function"==typeof Symbol&&("symbol"==typeof origSymbol("foo")&&("symbol"==typeof Symbol("bar")&&shams())))},isSymbol=createCommonjsModule(function(e){var r=Object.prototype.toString;if(hasSymbols()){var t=Symbol.prototype.toString,n=/^Symbol\(.*\)$/,i=function(e){return"symbol"==typeof e.valueOf()&&n.test(t.call(e))};e.exports=function(e){if("symbol"==typeof e)return!0;if("[object Symbol]"!==r.call(e))return!1;try{return i(e)}catch(e){return!1}}}else e.exports=function(e){return!1}}),castString=cachedConstructorsX.String,toStringX=function(e){if(isSymbol(e))throw new TypeError("Cannot convert a Symbol value to a string");return castString(e)},requireCoercibleToStringX=function(e){return toStringX(requireObjectCoercibleX(e))},list=[{code:9,description:"Tab",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\t"},{code:10,description:"Line Feed",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\n"},{code:11,description:"Vertical Tab",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\v"},{code:12,description:"Form Feed",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\f"},{code:13,description:"Carriage Return",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\r"},{code:32,description:"Space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:160,description:"No-break space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:5760,description:"Ogham space mark",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:6158,description:"Mongolian vowel separator",es5:!0,es2015:!0,es2016:!0,es2017:!1,es2018:!1,string:"᠎"},{code:8192,description:"En quad",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8193,description:"Em quad",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8194,description:"En space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8195,description:"Em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8196,description:"Three-per-em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8197,description:"Four-per-em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8198,description:"Six-per-em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8199,description:"Figure space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8200,description:"Punctuation space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8201,description:"Thin space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8202,description:"Hair space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8232,description:"Line separator",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2028"},{code:8233,description:"Paragraph separator",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2029"},{code:8239,description:"Narrow no-break space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:8287,description:"Medium mathematical space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:12288,description:"Ideographic space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"　"},{code:65279,description:"Byte Order Mark",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\ufeff"}],stringES2016="",stringES2018="",length=list.length,i=0;i<length;i+=1)list[i].es2016&&(stringES2016+=list[i].string),list[i].es2018&&(stringES2018+=list[i].string);var whiteSpaceX={list:list,string:stringES2018,string5:stringES2016,string2015:stringES2016,string2016:stringES2016,string2017:stringES2018,string2018:stringES2018},Rx=cachedConstructorsX.RegExp,reLeft2016=new Rx("^["+whiteSpaceX.string2016+"]+"),reLeft2018=new Rx("^["+whiteSpaceX.string2018+"]+"),replace="".replace,$trimLeft2016=function(e){return replace.call(requireCoercibleToStringX(e),reLeft2016,"")},$trimLeft2018=function(e){return replace.call(requireCoercibleToStringX(e),reLeft2018,"")},trimLeftX={trimLeft:$trimLeft2018,trimLeft2016:$trimLeft2016,trimLeft2018:$trimLeft2018},Rx$1=cachedConstructorsX.RegExp,reRight2016=new Rx$1("["+whiteSpaceX.string2016+"]+$"),reRight2018=new Rx$1("["+whiteSpaceX.string2018+"]+$"),replace$1="".replace,$trimRight2016=function(e){return replace$1.call(requireCoercibleToStringX(e),reRight2016,"")},$trimRight2018=function(e){return replace$1.call(requireCoercibleToStringX(e),reRight2018,"")},trimRightX={trimRight:$trimRight2018,trimRight2016:$trimRight2016,trimRight2018:$trimRight2018},trimLeft2016=trimLeftX.trimLeft2016,trimLeft2018=trimLeftX.trimLeft2018,trimRight2016=trimRightX.trimRight2016,trimRight2018=trimRightX.trimRight2016,$trim2016=function(e){return trimLeft2016(trimRight2016(e))},$trim2018=function(e){return trimLeft2018(trimRight2018(e))},trimX={trim:$trim2018,trim2016:$trim2016,trim2018:$trim2018},trim2016=trimX.trim2016,trim2018=trimX.trim2018,Rx$2=cachedConstructorsX.RegExp,reNormalize2016=new Rx$2("["+whiteSpaceX.string2016+"]+","g"),reNormalize2018=new Rx$2("["+whiteSpaceX.string2018+"]+","g"),replace$2="".replace,$normalizeSpace2016=function(e){return replace$2.call(trim2016(e),reNormalize2016," ")},$normalizeSpace2018=function(e){return replace$2.call(trim2018(e),reNormalize2018," ")},normalizeSpaceX={normalizeSpace:$normalizeSpace2018,normalizeSpace2016:$normalizeSpace2016,normalizeSpace2018:$normalizeSpace2018},STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,replace$3="".replace,replaceCommentsX=function(e){return replace$3.call(requireCoercibleToStringX(e),STRIP_COMMENTS,arguments.length>1?toStringX(arguments[1]):"")},fToString=Function.prototype.toString,normalise=normalizeSpaceX.normalizeSpace,funcTag="[object Function]",genTag="[object GeneratorFunction]",asyncTag="[object AsyncFunction]",ctrRx=/^class /,test=ctrRx.test,hasNativeClass=!1===attemptX(function(){return Function('"use strict"; return class My {};')()}).threw,testClassstring=function(e){return test.call(ctrRx,normalise(replaceCommentsX(fToString.call(e)," ")))},isES6ClassFn=function(e){var r=attemptX(testClassstring,e);return!1===r.threw&&r.value},tryFuncToString=function(e,r){return(!hasNativeClass||!1!==r||!isES6ClassFn(e))&&!1===attemptX.call(e,fToString).threw},isFunctionX=function(e){if(isPrimitive(e))return!1;if(hasToStringTagX)return tryFuncToString(e,toBooleanX(arguments[1]));if(hasNativeClass&&isFalseyX(arguments[1])&&isES6ClassFn(e))return!1;var r=toStringTagX(e);return r===funcTag||r===genTag||r===asyncTag};const isstring=function(e){return"string"==typeof e},isundefinedNull=function(e){return void 0===e||null===e},Type={string:{is(e){return isstring(e)},isNot(e){return!isstring(e)},isEmpty(e){return isstring(e)&&0===e.length},isNotEmpty(e){return isstring(e)&&e.length>=1},safe(e){return isstring(e)?e:""}},number:{is(e){return isNumber(e)},isNot(e){return!isNumber(e)},isinteger(e){return isInteger(e)},isNatural(e){return isInteger(e)&&e>=0},safe(e){return isNumber(e)?e:0}},boolean:{is(e){return!0===e||!1===e},isNot(e){return!0!==e&&!1!==e}},array:{is(e){return isarray(e)},isNot(e){return!isarray(e)},isEmpty(e){return isarray(e)&&0===e.length},isNotEmpty(e){return isarray(e)&&e.length>=1},safe(e){return isarray(e)?e:[]}},object:{is(e){return isObject(e)},isNot(e){return!isObject(e)},isEmpty(e){return isObject(e)&&0===Object.keys(e).length},isNotEmpty(e){return isObject(e)&&Object.keys(e).length>=1},safe(e){return isObject(e)?e:{}}},function:{is(e){return isFunctionX(e)},isNot(e){return!isFunctionX(e)}},undefinedNull:{is(e){return isundefinedNull(e)},isNot(e){return!isundefinedNull(e)}}};var type=Type;const phoneReg=new RegExp(/^1\d{10}$/),emailReg=new RegExp(/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/),colorReg=new RegExp(/(^#\w{3}$)|(^#\w{6}$)|(^rgb\s*\((\s*\d{1,3}\s*,){2}\s*\d{1,3}\s*\)$)|(^rgba\s*\((\s*\d{1,3}\s*,){3},[01]{1}\.?\d*\s*\)$)/),versionReg=new RegExp(/(^[vV]\d+$)|(^[vV]((\d+\.)+)(\d+)$)/),signReg=new RegExp(/^[a-zA-Z_][a-zA-Z_\d]*$/),numStrReg=new RegExp(/^\d+$/),commonTimeReg=new RegExp(/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}(:\d{2})?/),Pattern={phone:{is(e){return type.string.isNotEmpty(e)&&phoneReg.test(e)}},uri:{is(e){try{return type.string.isNotEmpty(e)&&type.object.is(new URL(e))}catch(e){return!1}}},email:{is(e){return type.string.isNotEmpty(e)&&emailReg.test(e)}},color:{is(e){return type.string.isNotEmpty(e)&&colorReg.test(e)}},version:{is(e){return type.string.isNotEmpty(e)&&versionReg.test(e)}},sign:{is(e){return type.string.isNotEmpty(e)&&signReg.test(e)}},numStr:{is(e){return type.string.isNotEmpty(e)&&numStrReg.test(e)}},jsonStr:{is(e){try{return type.string.isNotEmpty(e)&&JSON.parse(e)}catch(e){return!1}}},time:{is(e){try{const r=new Date(e);return type.object.is(r)&&"Invalid Date"!==r.toString()}catch(e){return!1}},isCommon(e){return type.string.isNotEmpty(e)&&commonTimeReg.test(e)}}};var pattern=Pattern;const ErrorMsg={minValueHint:e=>`小于最小值 ${e}`,maxValueHint:e=>`大于最大值 ${e}`,minLenHint:e=>`小于最小长度 ${e}`,maxLenHint:e=>`大于最大长度 ${e}`,typeNeedHint:e=>`需要 ${e} 类型`,enumHint:e=>`${e} 不是有效值之一`,integerHint:e=>`${e} 不是整数`,naturalHint:e=>`${e} 不是自然数`,matchHint:e=>`${e} 未通过正则规则`,patternNeedHint:e=>`需要 ${e} 格式`,propNeedHint:e=>`属性 ${e}: 缺少数据`,propRestrictHint:e=>`属性 ${e} 不允许`,propErrorHint:(e,r)=>`属性 ${e}: ${ErrorMsg.safeErrorHint(r)}`,elementEmptyHint:"数组缺少元素",elementNeedHint:e=>`第 ${e} 项: 缺少数据`,elementErrorHint:(e,r)=>`第 ${e} 项: ${ErrorMsg.safeErrorHint(r)}`,safeErrorHint:e=>"string"==typeof e?e:e&&e.message?e.message:"未知",verifyErrorHint:(e,r,t)=>`${e?e+" ":""}校验不通过, 错误信息：${r||t||"未知"}`};var verify_error=ErrorMsg;const TYPES={string:"string",number:"number",object:"object",array:"array"},METHODS={index:"index",required:"required",type:"type",schema:"schema",custom:"custom",hint:"hint",pattern:"pattern",length:"length",enum:"enum",match:"match",range:"range",integer:"integer",natural:"natural",restrict:"restrict",props:"props",elements:"elements"},COMMON_METHODS=[METHODS.index,METHODS.required,METHODS.type,METHODS.schema,METHODS.custom,METHODS.hint],TYPE_METHODS={string:[METHODS.pattern,METHODS.length,METHODS.enum,METHODS.match],number:[METHODS.range,METHODS.integer,METHODS.natural,METHODS.enum],object:[METHODS.restrict,METHODS.props],array:[METHODS.elements,METHODS.length]};var constant={COMMON_METHODS:COMMON_METHODS,TYPE_METHODS:TYPE_METHODS,TYPES:TYPES,METHODS:METHODS};const{COMMON_METHODS:COMMON_METHODS$1,TYPE_METHODS:TYPE_METHODS$1,TYPES:TYPES$1,METHODS:METHODS$1}=constant,CHECK_METHODS=COMMON_METHODS$1.slice(0,COMMON_METHODS$1.length-2),typeVerify=(e,r,t)=>{let n=!1;switch(r){case TYPES$1.string:n=type.string.is(e);break;case TYPES$1.number:n=type.number.is(e);break;case TYPES$1.object:n=type.object.is(e);break;case TYPES$1.array:n=type.array.is(e)}if(!n)throw new Error(verify_error.verifyErrorHint(METHODS$1.type,t,verify_error.typeNeedHint(r)));return!0},restrictVerify=(e,r,t,n)=>{if(!r)return!0;const i=Object.keys(e);const o=Object.keys(t);for(const e of i)if(!o.includes(e))throw new Error(verify_error.verifyErrorHint(METHODS$1.restrict,n,verify_error.propRestrictHint(e)));return!0},propsVerify=(e,r)=>{const t=()=>{for(const t in r){const n=r[t],i=e[t],o=n.required,s=type.object.safe(n.hint),c=s[METHODS$1.required]||verify_error.propNeedHint(t),a=requiredVerify(i,o,c);if(!a)try{verify(i,n,e)}catch(e){throw new Error(verify_error.propErrorHint(t,e))}}};try{t()}catch(e){throw e}},requiredVerify=(e,r,t)=>{if(type.undefinedNull.is(e)){if(r)throw new Error(t);return!0}return!1},patternVerify=(e,r,t)=>{const n=(pattern[r]||{}).is;if(type.function.isNot(n))return!0;const i=n.call(pattern[r],e);if(!i)throw new Error(verify_error.verifyErrorHint(METHODS$1.pattern,t,verify_error.patternNeedHint(r)));return!0},lengthVerify=(e,r,t)=>{const n=r.min;const i=r.max;const o=e.length;if(type.number.is(n)&&o<n)throw new Error(verify_error.verifyErrorHint(METHODS$1.length,t,verify_error.minLenHint(n)));if(type.number.is(i)&&o>i)throw new Error(verify_error.verifyErrorHint(METHODS$1.length,t,verify_error.maxLenHint(i)));return!0},enumVerify=(e,r,t)=>{if(!r.includes(e))throw new Error(verify_error.verifyErrorHint(METHODS$1.enum,t,verify_error.enumHint(e)));return!0},integerVerify=(e,r,t)=>{if(r&&!type.number.isinteger(e))throw new Error(verify_error.verifyErrorHint(METHODS$1.integer,t,verify_error.integerHint(e)));return!0},naturalVerify=(e,r,t)=>{if(r&&!type.number.isNatural(e))throw new Error(verify_error.verifyErrorHint(METHODS$1.natural,t,verify_error.naturalHint(e)));return!0},matchVerify=(e,r,t)=>{type.string.is(r)&&(r=new RegExp(r));if(!r.test(e))throw new Error(verify_error.verifyErrorHint(METHODS$1.match,t,verify_error.matchHint(e)));return!0},rangeVerify=(e,r,t)=>{const n=r.min;const i=r.max;if(type.number.is(n)&&e<n)throw new Error(verify_error.verifyErrorHint(METHODS$1.range,t,verify_error.minValueHint(n)));if(type.number.is(i)&&e>i)throw new Error(verify_error.verifyErrorHint(METHODS$1.range,t,verify_error.maxValueHint(i)));return!0},elementsVerify=(e,r)=>{const t=(r,t,n)=>{const i=t.required;const o=type.object.safe(t.hint);const s=o[METHODS$1.required]||verify_error.elementNeedHint(n);const c=requiredVerify(r,i,s);if(c)return;try{verify(r,t,e)}catch(e){throw new Error(verify_error.elementErrorHint(n,e))}};const n=()=>{const n={};for(const i of r){const r=i.index;if(type.number.isNatural(r)){const o=e[r];t(o,i,r),n[r]=!0}else{const r=i.required,o=type.object.safe(i.hint);if(r&&e.length<=0)throw new Error(o[METHODS$1.required]||verify_error.elementEmptyHint);for(let r=0;r<e.length;r++)if(!n[r]){const o=e[r];t(o,i,r),n[r]=!0}}}};try{n()}catch(e){throw e}},schemaVerify=(e,r,t,n)=>{try{r.verify(e,!0,n)}catch(e){throw new Error(verify_error.verifyErrorHint(METHODS$1.schema,t||`${verify_error.safeErrorHint(e)}`))}return!0},customVerify=(e,r,t,n)=>{try{const i=r(e,n);if(!i)throw new Error(t||"未知")}catch(e){throw new Error(verify_error.verifyErrorHint(METHODS$1.custom,`${verify_error.safeErrorHint(e)}`))}return!0},verify=(e,r,t)=>{const n=()=>{const n=type.object.safe(r.hint);const i=r.type;const o=[].concat(CHECK_METHODS,TYPE_METHODS$1[i]);o.push(METHODS$1.custom);for(const i of o)if(r.hasOwnProperty(i)){const o=r[i],s=r.props,c=n[i];switch(i){case METHODS$1.type:typeVerify(e,o,c);break;case METHODS$1.restrict:restrictVerify(e,o,s,c);break;case METHODS$1.pattern:patternVerify(e,o,c);break;case METHODS$1.length:lengthVerify(e,o,c);break;case METHODS$1.enum:enumVerify(e,o,c);break;case METHODS$1.match:matchVerify(e,o,c);break;case METHODS$1.range:rangeVerify(e,o,c);break;case METHODS$1.integer:integerVerify(e,o,c);break;case METHODS$1.natural:naturalVerify(e,o,c);break;case METHODS$1.elements:elementsVerify(e,o);break;case METHODS$1.props:propsVerify(e,o);break;case METHODS$1.schema:schemaVerify(e,o,c,t);break;case METHODS$1.custom:customVerify(e,o,c,t)}}};try{n()}catch(e){throw e}};var verify_1=verify;const ErrorMsg$1={propsInfoEmpty:"属性信息不能为空",unIdentifyType:"不可识别的属性类型",emptyLengthInfo:"空的长度信息",emptyEnumInfo:"空的枚举信息",errorEnumInfo:"错误的枚举信息",emptyHintInfo:"空的提示信息",emptyRangeInfo:"空的范围信息",illegalHintInfo:e=>`非法的提示信息属性：${e}`,illegalVerifyProps:e=>`非法的校验属性：${e}`,illegalPatternType:e=>`非法的格式类型：${e}`};var schema_error=ErrorMsg$1;const{COMMON_METHODS:COMMON_METHODS$2,TYPE_METHODS:TYPE_METHODS$2,TYPES:TYPES$2,METHODS:METHODS$2}=constant,PATTERNS=Object.keys(pattern),schemaCheck=function(e){if(type.object.isNot(e))throw new Error(schema_error.propsInfoEmpty);if(e.hasOwnProperty(METHODS$2.schema)){const r=e[METHODS$2.schema];if(type.object.isNot(r)||!(r instanceof Schema))throw new Error(schema_error.illegalVerifyProps(METHODS$2.schema));const t=r.info;for(const r of[METHODS$2.type,METHODS$2.required,METHODS$2.index])!e.hasOwnProperty(r)&&t.hasOwnProperty(r)&&(e[r]=t[r])}const r=Object.assign({},e);return typeCheck(r)},typeCheck=function(e){switch(e.type){case String:(e=stringCheck(e)).type=TYPES$2.string;break;case Number:(e=numberCheck(e)).type=TYPES$2.number;break;case Object:(e=objectCheck(e)).type=TYPES$2.object;break;case Array:(e=arrayCheck(e)).type=TYPES$2.array;break;case TYPES$2.string:e=stringCheck(e);break;case TYPES$2.number:e=numberCheck(e);break;case TYPES$2.object:e=objectCheck(e);break;case TYPES$2.array:e=arrayCheck(e)}return typeCommonCheck(e)},typeCommonCheck=e=>{const r=TYPE_METHODS$2[e.type];if(type.array.isNot(r))throw new Error(schema_error.unIdentifyType);for(const t in e)if(!COMMON_METHODS$2.includes(t)&&!r.includes(t))throw new Error(schema_error.illegalVerifyProps(t));if(e.hasOwnProperty(METHODS$2.hint)){const t=e[METHODS$2.hint];if(!type.object.is(t))throw new Error(schema_error.illegalVerifyProps(METHODS$2.hint));for(const e in t)if(!COMMON_METHODS$2.includes(e)&&!r.includes(e))throw new Error(schema_error.illegalHintInfo(e))}if(e.hasOwnProperty(METHODS$2.custom)){const r=e[METHODS$2.custom];if(type.function.isNot(r))throw new Error(schema_error.illegalVerifyProps(METHODS$2.custom))}if(e.hasOwnProperty(METHODS$2.index)){const r=e[METHODS$2.index];if(type.string.isNot(r)&&type.number.isNot(r))throw new Error(schema_error.illegalVerifyProps(METHODS$2.index))}return e},stringCheck=function(e){if(e.hasOwnProperty(METHODS$2.pattern)){const r=e[METHODS$2.pattern];if(!PATTERNS.includes(r))throw new Error(schema_error.illegalPatternType(r))}if(e.hasOwnProperty(METHODS$2.length)){const r=e[METHODS$2.length];if(type.object.isEmpty(r))throw new Error(schema_error.emptyLengthInfo);if(!type.number.isNatural(r.min)&&!type.number.isNatural(r.max))throw new Error(schema_error.emptyLengthInfo);r.min=+r.min,r.max=+r.max}if(e.hasOwnProperty(METHODS$2.enum)){const r=e[METHODS$2.enum];if(type.array.isNot(r)||type.array.isEmpty(r))throw new Error(schema_error.emptyEnumInfo);const t=r.every(e=>type.string.is(e));if(!t)throw new Error(schema_error.errorEnumInfo)}if(e.hasOwnProperty(METHODS$2.match)){const r=e[METHODS$2.match];if(!(type.string.isNotEmpty(r)||r instanceof RegExp))throw new Error(schema_error.illegalVerifyProps(METHODS$2.match))}return e},numberCheck=function(e){if(e.hasOwnProperty(METHODS$2.range)){const r=e[METHODS$2.range];if(type.object.isEmpty(r))throw new Error(schema_error.emptyRangeInfo);if(type.number.isNot(r.min)&&type.number.isNot(r.max))throw new Error(schema_error.emptyRangeInfo);r.min=+r.min,r.max=+r.max}if(e.hasOwnProperty(METHODS$2.integer)){const r=e[METHODS$2.integer];if(type.boolean.isNot(r))throw new Error(schema_error.illegalVerifyProps(METHODS$2.integer))}if(e.hasOwnProperty(METHODS$2.natural)){const r=e[METHODS$2.natural];if(type.boolean.isNot(r))throw new Error(schema_error.illegalVerifyProps(METHODS$2.natural))}if(e.hasOwnProperty(METHODS$2.enum)){const r=e[METHODS$2.enum];if(type.array.isNot(r)||type.array.isEmpty(r))throw new Error(schema_error.emptyEnumInfo);const t=r.every(e=>type.number.is(e));if(!t)throw new Error(schema_error.errorEnumInfo)}return e},objectCheck=function(e){if(e.hasOwnProperty(METHODS$2.restrict)){const r=e[METHODS$2.restrict],t=e[METHODS$2.props];if(type.boolean.isNot(r))throw new Error(schema_error.illegalVerifyProps(METHODS$2.restrict));if(r&&type.object.isNot(t))throw new Error(schema_error.illegalVerifyProps(METHODS$2.props))}if(e.hasOwnProperty(METHODS$2.props)){const r=e[METHODS$2.props];if(type.object.isNot(r))throw new Error(schema_error.illegalVerifyProps(METHODS$2.props));for(const e in r)r[e]=schemaCheck(r[e]);e.props=r}return e},arrayCheck=function(e){if(e.hasOwnProperty(METHODS$2.elements)){const r=e[METHODS$2.elements];if(!type.object.isNotEmpty(r)&&!type.array.isNotEmpty(r))throw new Error(schema_error.illegalVerifyProps(METHODS$2.elements));type.object.isNotEmpty(r)?(delete r.index,e.elements=[schemaCheck(r)]):e.elements=r.map(e=>schemaCheck(e))}if(e.hasOwnProperty(METHODS$2.length)){const r=e[METHODS$2.length];if(type.object.isEmpty(r))throw new Error(schema_error.emptyLengthInfo);if(!type.number.isNatural(r.min)&&!type.number.isNatural(r.max))throw new Error(schema_error.emptyLengthInfo);r.min=+r.min,r.max=+r.max}return e};class Schema{constructor(e){this.info=schemaCheck(e)}verify(e,r,t){try{return verify_1(e,this.info,t),!0}catch(e){if(r)throw e;return!1}}}var schema=Schema,src={Type:type,Pattern:pattern,Schema:schema},src_1=src.Type,src_2=src.Pattern,src_3=src.Schema;exports.Pattern=src_2,exports.Schema=src_3,exports.Type=src_1,exports.default=src;
